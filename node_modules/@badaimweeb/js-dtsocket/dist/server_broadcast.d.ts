import type { DTSocketServer } from "./server.js";
import type { GetTypeContext, ServerContext, SymbolEventTableType } from "./types.js";
export interface DTSocketServer_BroadcastOperator<Context extends ServerContext> {
    emit<T extends keyof GetTypeContext<Context, SymbolEventTableType>["scEvents"]>(event: T, ...args: Parameters<GetTypeContext<Context, SymbolEventTableType>["scEvents"][T]>): boolean;
    emit(event: string, ...args: any[]): boolean;
}
export declare class DTSocketServer_BroadcastOperator<Context extends ServerContext> {
    private server;
    rooms: string[];
    excludeSockets: string[];
    constructor(server: DTSocketServer<Context>, rooms: string[], excludeSockets?: string[]);
    to(room: string | string[]): DTSocketServer_BroadcastOperator<Context>;
}
